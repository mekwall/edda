# DISABLED: Release workflow temporarily disabled
# This workflow is commented out and will not run until re-enabled
#
# name: Release
#
# on:
#   push:
#     tags:
#       - "v*"
#
# env:
#   CARGO_TERM_COLOR: always
#
# jobs:
#   build:
#     name: Build ${{ matrix.target }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         include:
#           - target: x86_64-unknown-linux-gnu
#             os: ubuntu-latest
#             asset_name: edda-x86_64-unknown-linux-gnu
#           - target: x86_64-pc-windows-msvc
#             os: windows-latest
#             asset_name: edda-x86_64-pc-windows-msvc.exe
#           - target: x86_64-apple-darwin
#             os: macos-latest
#             asset_name: edda-x86_64-apple-darwin
#           - target: aarch64-apple-darwin
#             os: macos-latest
#             asset_name: edda-aarch64-apple-darwin
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#
#       - name: Install Rust toolchain
#         uses: dtolnay/rust-toolchain@stable
#         with:
#           targets: ${{ matrix.target }}
#
#       - name: Cache Rust dependencies
#         uses: Swatinem/rust-cache@v2
#         with:
#           key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
#           shared-key: ${{ runner.os }}-${{ matrix.target }}
#
#       - name: Build release binary
#         run: cargo build --release --target ${{ matrix.target }} --all-features
#
#       - name: Create release archive
#         shell: bash
#         run: |
#           cd target/${{ matrix.target }}/release
#           if [[ "${{ runner.os }}" == "Windows" ]]; then
#             7z a ../../../${{ matrix.asset_name }}.zip edda.exe
#           else
#             tar -czf ../../../${{ matrix.asset_name }}.tar.gz edda
#           fi
#
#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: ${{ matrix.asset_name }}
#           path: ${{ matrix.asset_name }}.*
#
#   release:
#     name: Create Release
#     runs-on: ubuntu-latest
#     needs: build
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#
#       - name: Download all artifacts
#         uses: actions/download-artifact@v4
#
#       - name: Create release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             edda-*/edda-*.zip
#             edda-*/edda-*.tar.gz
#           generate_release_notes: true
#           draft: false
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
